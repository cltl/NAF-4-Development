<!-- DTD NAF -->
<!-- NAF is a document-level format for NLP annotations.

	Compared to NAF 3.2, this version:
	- adds a <lpDependency> element to represent data/tool dependencies of <lp> elements
	- adds an "id" attribute to <lp> elements, for unique identification of processing steps
	- provides restrictive element declarations, aiming at precising counts of subelements
	of different types: declarations like (a|b|c)+ are replaced by declarations like (a,b?,c+)
	- removes <factualitylayer>, which was marked as deprecated in v3.2
	-->
<!ELEMENT NAF (nafHeader|raw|topics|text|terms|multiwords|deps|chunks|entities|coreferences|constituency|srl|opinions|timeExpressions|tunits|locations|dates|temporalRelations|causalRelations|markables|attribution|factualities)*>

<!-- NAF ELEMENT -->
<!ATTLIST NAF
          doc CDATA #IMPLIED
          version CDATA #IMPLIED
          xml:lang CDATA #IMPLIED>

<!-- NAFHEADER LAYER-->
<!ELEMENT nafHeader (fileDesc?,public?,linguisticProcessors*)>

<!-- FILEDESC ELEMENT -->
<!-- <fileDesc> is an empty element containing information about the
      computer document itself.

      Attributes:
      - title: the title of the document (optional).
      - author: the author of the document (optional).
      - creationtime: when the document was created. In ISO 8601. (optional)
      - filename: the original file name (optional).
      - filetype: the original format (PDF, HTML, DOC, etc) (optional).
      - pages: number of pages of the original document (optional).
      -->

<!ELEMENT fileDesc EMPTY>
<!ATTLIST fileDesc
          title CDATA #IMPLIED
          author CDATA #IMPLIED
          creationtime CDATA #IMPLIED
          filename CDATA #IMPLIED
          filetype CDATA #IMPLIED
          pages CDATA #IMPLIED>

<!-- PUBLIC ELEMENT -->
<!-- <public> is an empty element which stores public information about
       the document, such as its URI.

       Attributes:
       - publicId: a public identifier (for instance, the number inserted by the capture server) (optional).
       - uri: a public URI of the document (optional).
       -->

<!ELEMENT public EMPTY>
<!ATTLIST public
          publicId CDATA #IMPLIED
          uri CDATA #IMPLIED>


<!-- LINGUISTICPROCESSORS ELEMENT -->
<!-- <linguisticProcessors> elements store the information about which linguistic processors
        produced the NAF document. There can be several <linguisticProcessors> elements, one
          per NAF layer. NAF layers correspond to the top-level elements of the
          documents, such as "text", "terms", "deps" etc.
          -->

<!ELEMENT linguisticProcessors (lp)+>
<!ATTLIST linguisticProcessors
          layer CDATA #REQUIRED>


<!-- LP ELEMENT -->
<!-- <lp> elements describe one specific linguistic processor

    Attributes:
         - name: the name of the processor
         - version: processor's version
         - timestamp: a timestamp, denoting the date/time at which the processor was
         launched. The timestamp follows the XML Schema xs:dateTime type (See
         http://www.w3.org/TR/xmlschema-2/#isoformats). In summary, the date is
         specified following the form "YYYY-MM-DDThh:mm:ss" (all fields
         required). To specify a time zone, you can either enter a dateTime in UTC
         time by adding a "Z" behind the time ("2002-05-30T09:00:00Z") or you can
         specify an offset from the UTC time by adding a positive or negative time
         behind the time ("2002-05-30T09:00:00+06:00").
         - beginTimestamp (optional): a timestamp, denoting the date/time at
         which the processor started the process. It follows the XML Schema
         xs:dateTime format.
         - endTimestamp (optional): a timestamp, denoting the date/time at
         which the processor ended the process. It follows the XML Schema
         xs:dateTime format.
		 - hostname (optional)
         -->
<!ELEMENT lp (lpDependency)*>
<!ATTLIST lp
          name CDATA #REQUIRED
          version CDATA #REQUIRED
          timestamp CDATA #IMPLIED
          beginTimestamp CDATA #IMPLIED
          endTimestamp CDATA #IMPLIED
          hostname CDATA #IMPLIED
		  id CDATA #IMPLIED>

<!-- LPDEPENDENCY ELEMENT -->
<!-- <lpDependency> elements describe tool/data/model dependencies of linguistic processors.
	Attributes:
		- name: name of the dependency
		- version: version of the dependency
		- type: type of the dependency, e.g., 'tool', 'data', 'model'
	-->
<!ELEMENT lpDependency EMPTY>
<!ATTLIST lpDependency
		name CDATA #REQUIRED
		version CDATA #IMPLIED
		type CDATA #IMPLIED>

<!-- RAW LAYER -->
<!ELEMENT raw (#PCDATA)>

<!-- TOPICS LAYER -->
<!ELEMENT topics (topic)+>

<!-- TOPIC ELEMENT
	<topic> elements describe topics associated with a text.

	Text content: topic descriptor

	Attributes:
		- source (optional): A reference to the entity/tool
  		responsible for creating the annotation.
 		- method (optional): The name of the method used to
  		create the annotation. This attribute is usually used in conjunction
  		with the source attribute.
 		- confidence (optional): confidence value for the annotation. The confidence value can be in
  		fact almost anything (similarity score, the value of the margin on a
  		SVM based classification, etc), as long as it can be used to sort
  		all annotations sharing the source and method
  		attributes.
		- uri (optional): if the topic is a resource
  		from an external reference, an URI to this resource. For instace, it
  		could be a URI pointing to a Wikipedia category page, etc
	-->
<!ELEMENT topic (#PCDATA)>
<!ATTLIST topic
          source CDATA #IMPLIED
          method CDATA #IMPLIED
          confidence CDATA #IMPLIED
          uri CDATA #IMPLIED>


<!-- TEXT LAYER -->
<!ELEMENT text (wf)+>

<!-- WORDFORM ELEMENT -->
<!--
    <wf> elements describe and contain all word forms generated after the tokenization step.
    <wf> elements can contain (optionally) a list of subtokens (these provide reference ids for morphological parts in
    decomposible terms)

    Attributes:
        - id: the id of the word form (REQUIRED and UNIQUE)
        - sent: sentence id of the word form (optional)
        - para: paragraph id of the word form (optional)
        - page: page id of the word form (optional)
        - offset: the offset (in characters) of the word form (optional)
        - length: the length (in characters) of the word form (optional)
        - xpath: in case of source xml files, the xpath expression identifying the original word form (optional)
        -->
<!ELEMENT wf (#PCDATA|subtoken)*>
<!ATTLIST wf
          id ID #REQUIRED
          sent CDATA #IMPLIED
          para CDATA #IMPLIED
          page CDATA #IMPLIED
          offset CDATA #REQUIRED
          length CDATA #REQUIRED
          xpath CDATA #IMPLIED>


<!-- SUBTOKEN ELEMENT -->
<!-- <subtoken> elements describe a subtoken of a wf element. They are meant to be referenced by compound terms.

	Recommended id form:
		- WF_ID.SUBTOKEN_ID, e.g., "w1.sub1", "w1.sub2"

    Attributes:
    	- id: the id of the subtoken (REQUIRED and UNIQUE).     	- offset: the offset (in characters) of the subtoken
    	- length: the length (in characters) of the subtoken
        -->

<!ELEMENT subtoken (#PCDATA)>
<!ATTLIST subtoken
          id ID #REQUIRED
          offset CDATA #REQUIRED
          length CDATA #REQUIRED>

<!-- TERMS LAYER -->
<!ELEMENT terms (term)+>

<!-- TERM ELEMENT -->
<!-- terms provide morphological information about word forms.

	Subelements:
	 	- span: token ids covered by term (REQUIRED)
	 	- components: list of morphemes in term (optional)
	 	- externalReferences (optional)
	 	- sentiment (optional)

	Attributes:
		- id: unique identifier (REQUIRED AND UNIQUE)
		- type: type of the term (open/close) (IMPLIED)
		- lemma: lemma of the term (IMPLIED).
		- pos: part of speech. (IMPLIED)
		- morphofeat: morphosyntactic feature encoded as a single attribute.
		- netype:
		- case: declension case of the term (optional).
		- head: if the term is a compound, the id of the head component (optional).
		- component_of: if the term is part of multiword, i.e., referenced by a multiwords/mw element
    		than this attribute can be used to make reference to the multiword.
		- compound_type: endocentric or exocentric
	-->
<!ELEMENT term (span,component*,externalReferences?,sentiment?)>
<!ATTLIST term
          id ID #REQUIRED
          type CDATA #IMPLIED
          lemma CDATA #IMPLIED
          pos CDATA #IMPLIED
          morphofeat CDATA #IMPLIED
          netype CDATA #IMPLIED
          case CDATA #IMPLIED
          head CDATA #IMPLIED
		  component_of IDREF #IMPLIED
          compound_type CDATA #IMPLIED>

<!-- MULTIWORDS LAYER -->
<!-- multiword-expression layer-->
<!ELEMENT multiwords (mw)+>

<!-- MW ELEMENT -->
<!-- Represents multiword expressions.

	Subelements:
		- components: list of <component> elements (REQUIRED)
		- externalReferences (optional)

    Attributes:
		- id: unique identifier (REQUIRED AND UNIQUE)
		- lemma: lemma of the term (optional).
		- pos: part of speech. (optional)
		- morphofeat: morphosyntactic feature encoded as a single attribute. (optional)
		- case: declension case (optional)
		- status: manual | system | deprecated (optional)
		- type: phrasal | idiom (optional)
  -->
<!ELEMENT mw (component+,externalReferences?)>
<!ATTLIST mw
          id ID #REQUIRED
          lemma CDATA #IMPLIED
          pos CDATA #IMPLIED
		  morphofeat CDATA #IMPLIED
		  case CDATA #IMPLIED
		  status CDATA #IMPLIED
		  type CDATA #REQUIRED>

<!-- SENTIMENT ELEMENT -->
<!-- <sentiment> elements allow to attach a sentiment to an <externalRef> or <component> element

    Attributes:
      - resource: identifier and reference to an external sentiment resource (optional)
      - polarity: e.g., positive, negative or neutral (optional)
      - strength: refers to the strength of the polarity, e.g. weak, average, strong, or numerical value (optional)
      - subjectivity: e.g., subjective/objective, factual/opinionated (optional)
      - sentiment_semantic_type: refers to a sentiment-related semantic type, e.g. Aesthetics_evaluation, Moral_judgment,
      Emotion  (optional)
      - sentiment modifier: refers to words which modify the polarity of another word, e.g., intensifier/weakener,
      polarity shifter  (optional)
      - sentiment_marker: refers to words which themselves do not carry polarity, but lead to it, e.g. 'find', 'think',
      'in my opinion', 'according to' (optional)
      - sentiment_product_feature: refers to a domain in feature-based sentiment analysis. For the tourist domain,
      for example: staff, cleanliness, beds, bathroom, transportation, location, etc..
      -->
<!ELEMENT sentiment EMPTY>
<!ATTLIST sentiment
          resource CDATA #IMPLIED
          polarity CDATA #IMPLIED
          strength CDATA #IMPLIED
          subjectivity CDATA #IMPLIED
          sentiment_semantic_type CDATA #IMPLIED
          sentiment_modifier CDATA #IMPLIED
          sentiment_marker CDATA #IMPLIED
          sentiment_product_feature CDATA #IMPLIED>


<!-- EXTERNALREFERENCES ELEMENT -->
<!-- The <externalReferences> element is used to associate terms to
    external resources, such as elements of a Knowledge base, an ontology,
    etc. It consists of several <externalRef> elements, one per
    association.
  -->

<!ELEMENT externalReferences (externalRef)+>

<!-- EXTERNALREF ELEMENT -->
<!--
	Subelements:
		- sentiment (optional)
		- externalRefs: a list of externalRef (externalRefs can be recursive) (optional)

	Attributes:
       	- reference (REQUIRED): code of the referred element. If the element is a
       	synset of some version of WordNet, it follows the pattern:

       	[a-z]{3}-[0-9]{2}-[0-9]+-[nvars]

       	which is a string composed by four fields separated by a dash.
       	The four fields are the following:
       		- Language code (three characters).
       		- WordNet version (two digits).
       		- Synset identifier composed by digits.
       		- POS character:
       			n noun
       			v verb
       			a adjective
       			r adverb
       	Examples of valid patterns: ``ENG-20-12345678-n'', ``SPA-16-017403-v'', etc.
     	- resource: indicates the identifier of the resource referred to (optional)
       	- reftype: (optional)
       	- status: (optional)
       	- source: (optional)
       	- timestamp: (optional)
       	- confidence: a floating number between 0 and 1. Indicates the confidence weight of the association (optional)
       -->
<!ELEMENT externalRef (sentiment?,externalRef*)>
<!ATTLIST externalRef
          reference CDATA #REQUIRED
          resource CDATA #IMPLIED
          reftype CDATA #IMPLIED
          status CDATA #IMPLIED
          source CDATA #IMPLIED
          confidence CDATA #IMPLIED
		  timestamp CDATA #IMPLIED>

<!-- COMPONENT ELEMENT -->
<!--
    Represents parts of compound terms and multiword expressions.

    Recommended id form:
    	- If the component is part of a multiword, i.e., a multiwords/mw element, the preferred naming is MW_ID.C_ID
    	e.g., mw1.c1 and mw1.c2 for the two components of the multiwords/mw element with the identifier mw1
    	- If the component is part of a compound, i.e., a terms/term element, the preferred naming is T_ID.C_ID
    	e.g., t1.c1 and t1.c2 for the two components of the terms/term element with the identifier t1.

    Subelements:
    	- span (REQUIRED)
    	- sentiment (optional)
    	- externalReferences (optional)

    Element ordering:
    	- span first, no other constraints

    Attributes:
    	- id: unique identifier (REQUIRED and UNIQUE).
    	- lemma: lemma of the term (REQUIRED)
    	- pos: part of speech (REQUIRED)
        - morphofeat (optional)
        - netype (optional)
    	- case: declension case (optional)
    	- head (optional)
  -->
<!ELEMENT component ((span,sentiment?,externalReferences?)
					|(span,externalReferences?,sentiment?))>
<!ATTLIST component
          id ID #REQUIRED
          type CDATA #IMPLIED
          lemma CDATA #IMPLIED
          pos CDATA #IMPLIED
          morphofeat CDATA #IMPLIED
          netype CDATA #IMPLIED
          case CDATA #IMPLIED
          head CDATA #IMPLIED>

<!-- MARKABLES LAYER -->
<!-- Groups tokens and attaches information to them -->
<!ELEMENT markables (mark)+>

<!-- MARK ELEMENT -->
<!-- Identifies a group of tokens. Attributes are essentially the same as for <term> elements, plus a 'source' attribute.
	Subelements:
		- span (REQUIRED)
		- sentiment (optional)
		- externalReferences (optional)

	Element ordering:
		- span first, no other constraints

	Attributes:
    	- id: unique identifier (REQUIRED and UNIQUE)
    	- type (optional)
    	- lemma: lemma of the term (optional)
    	- pos: part of speech (optional)
        - morphofeat (optional)
    	- case: declension case (optional)
    	- source (optional)
    	-->
<!ELEMENT mark ((span,sentiment?,externalReferences?)
				|(span,externalReferences?,sentiment?))>
<!ATTLIST mark
          id ID #REQUIRED
          type CDATA #IMPLIED
          lemma CDATA #IMPLIED
          pos CDATA #IMPLIED
          morphofeat CDATA #IMPLIED
          case CDATA #IMPLIED
          source CDATA #IMPLIED>


<!-- DEPS LAYER -->
<!ELEMENT deps (dep)+>

<!-- DEP ELEMENT -->
<!--
    <dep> elements represent syntactic dependencies.

    Attributes:
    	- from: id of the source element (REQUIRED)
    	- to: id of the target element (REQUIRED)
    	- rfunc: relational function.(REQUIRED)
    	- case: declension case (optional)
  -->
<!ELEMENT dep EMPTY>
<!ATTLIST dep
          from IDREF #REQUIRED
          to IDREF #REQUIRED
          rfunc CDATA #REQUIRED
          case CDATA #IMPLIED>

<!-- CHUNKS ELEMENT -->
<!ELEMENT chunks (chunk)+>
<!-- CHUNK ELEMENT -->
<!-- represents a syntactic chunk

    Attributes:
    -   id: unique identifier (REQUIRED)
    -   head: the chunk head’s term id  (REQUIRED)
    -   phrase: type of the phrase (REQUIRED)
    -   case: declension case (optional)
  -->
<!ELEMENT chunk (span)+>
<!ATTLIST chunk
          id ID #REQUIRED
          head IDREF #REQUIRED
          phrase CDATA #REQUIRED
          case CDATA #IMPLIED>

<!-- ENTITIES ELEMENT -->
<!ELEMENT entities (entity)+>

<!-- ENTITY ELEMENT -->
<!-- Represents a named entity

	Subelements:
		- span: elements spanned by the named entity (REQUIRED)
		- externalReferences (optional)

	Element ordering:
		- (span, externalReferences)

    Attributes:
   	 	- id: the id for the named entity (REQUIRED)
    	- type: type of the named entity. (optional)
    	- status: e.g., manual, system (optional)
    	- source (optional)
  -->
<!ELEMENT entity (span,externalReferences?)>
<!ATTLIST entity
          id ID #REQUIRED
          type CDATA #IMPLIED
		  status CDATA #IMPLIED
		  source CDATA #IMPLIED>

<!-- COREFERENCES ELEMENT -->
<!ELEMENT coreferences (coref)+>

<!-- COREF ELEMENT -->
<!--
	<coref> elements represent clusters of mention, each of which is represented by a <span> element

	Subelements:
		- spans: list of coreferent mention spans (REQUIRED)
		- externalReference (optional)

	Element ordering:
		- span first

	Recommended id form:
		- CO_ID, e.g. 'co1', 'co2', etc

    Attributes:
      - id: unique id (REQUIRED)
      - status: e.g., 'manual', 'system' (optional)
      - type: type of the coref set ('entity', 'event', etc)
      -->
<!ELEMENT coref (span+,externalReferences?)>
<!ATTLIST coref
          id ID #REQUIRED
          status CDATA #REQUIRED
          type CDATA #IMPLIED>


<!-- CONSTITUENCY LAYER -->
<!-- represents constituency trees for sentences in the document -->
<!ELEMENT constituency (tree)+>

<!-- TREE ELEMENT -->
<!-- lists the terminal nodes, nonterminal nodes and edges in the tree.
	A constituency tree consists at least of one nonterminal, but will have elements of each type in general.

	Subelements consist of at least one element from one of the following types:
		- nt: nonterminal node
		- t: terminal node
		- edge: edge between nodes

	Attributes:
		- type: (optional) -->
<!ELEMENT tree (nt|t|edge)+>
<!ATTLIST tree
          type CDATA #IMPLIED>

<!-- NT ELEMENT -->
<!-- represents a nonterminal node

	Attributes:
		- id (REQUIRED)
		- label: syntactic label (REQUIRED)-->
<!ELEMENT nt EMPTY>
<!ATTLIST nt
          id ID #REQUIRED
          label CDATA #REQUIRED>

<!-- T ELEMENT -->
<!-- represents a terminal node

	Subelements:
		- span (REQUIRED)
	Attributes:
   		- id (REQUIRED)
	-->
<!ELEMENT t (span)>
<!ATTLIST t
          id ID #REQUIRED>

<!-- EDGE ELEMENT -->
<!-- represents a tree edge
	Attributes:
		- from: id of edge's tail (child node) (REQUIRED)
		- to: id of edge's head (parent node) (REQUIRED)
		- id (optional)
		- head: marks whether edge's tail is the head of syntactic phrase (optional) -->
<!ELEMENT edge EMPTY>
<!ATTLIST edge
          id ID #IMPLIED
          from IDREF #REQUIRED
          to IDREF #REQUIRED
          head CDATA #IMPLIED>

<!-- SEMANTIC ROLE LABELING LAYER -->
<!ELEMENT srl (predicate)+>

<!-- PREDICATE ELEMENT -->
<!--
	Subelements:
		- span (REQUIRED)
		- externalReferences (optional)
		- roles: list of predicate arguments (optional)

	Element ordering:
		- span first, no other constraints

	Attributes:
		- id (REQUIRED)
		- confidence: confidence score (optional)
		- status: e.g., 'manual', 'system'-->
<!ELEMENT predicate ((span,externalReferences?,role*)
					|(span,role*,externalReferences?))>

<!ATTLIST predicate
          id ID #REQUIRED
          confidence CDATA #IMPLIED
          status CDATA #IMPLIED>

<!-- ROLE ELEMENT -->
<!-- roles represent arguments of a predicate
	Subelements:
		- span (REQUIRED)
		- externalReferences (optional)

	Element ordering:
		- span first

	Attributes:
		- id (REQUIRED)
		- confidence: confidence score (optional)
		- status: e.g., 'manual', 'system'-->
<!ELEMENT role (span,externalReferences?)>
<!ATTLIST role
          id ID #REQUIRED
          confidence CDATA #IMPLIED
		  status CDATA #IMPLIED>

<!-- OPINIONS ELEMENT -->
<!ELEMENT opinions (opinion)+>

<!-- OPINION ELEMENT -->
<!--
    Subelements:
    	- opinion_expression: the expression (REQUIRED)
    	- opinion_holder: speaker or actor in the text that expresses the opinion (optional)
    	- opinion_target: the object of the opinion (optional)

    Element ordering:
    	- all orderings allowed

    Attributes:
    	- id:  the unique identifier of the opinion
  	-->
<!ELEMENT opinion ( (opinion_holder?,opinion_expression,opinion_target?)
		| (opinion_expression,opinion_holder?,opinion_target?)
		| (opinion_expression,opinion_target?,opinion_holder?)
		| (opinion_holder?,opinion_target?,opinion_expression)
		| (opinion_target?,opinion_holder?,opinion_expression)
		| (opinion_target?,opinion_expression,opinion_holder?))>
<!ATTLIST opinion
          id ID #REQUIRED>

<!-- OPINION_HOLDER ELEMENT -->
<!--
    Subelements:
        - span: target ids covered by the element (REQUIRED).

    Attributes:
    	- type: type of holder (e.g., 'speaker' or 'writer') (optional)
        -->
<!ELEMENT opinion_holder (span)>
<!ATTLIST opinion_holder
          type CDATA #IMPLIED>

<!-- OPINION_TARGET ELEMENT -->
<!--
    Subelements:
        - span: target ids covered by the element (REQUIRED).

    Attributes:
    	- type: type of target (optional)
        -->
<!ELEMENT opinion_target (span)>
<!ATTLIST opinion_target
          type CDATA #IMPLIED>

<!-- OPINION_EXPRESSION -->
<!--
	Subelements:
		- span: elements covered by the expression (REQUIRED)

    Attributes:
      - polarity: orientation of the opinion, e.g., positive, negative, neutral (optional)
      - strength: strength of the expression, e.g., weak, strong, or numerical value (optional)
      - subjectivity: whether the expression is subjective or not (optional)
      - sentiment_semantic_type: related semantic types, e.g., emotion, judgment, belief, speculation (optional)
      - sentiment_product_feature : refers to features attached to the opinion. For the tourist domain,
      for example: staff, cleanliness, beds, bathroom, transportation, location, etc..  (optional)
      -->
<!ELEMENT opinion_expression (span)>
<!ATTLIST opinion_expression
          polarity CDATA #IMPLIED
          strength CDATA #IMPLIED
          subjectivity CDATA #IMPLIED
          sentiment_semantic_type CDATA #IMPLIED
          sentiment_product_feature CDATA #IMPLIED>

<!-- TIMEEXPRESSIONS ELEMENT -->
<!-- NAF follows TimeML schema for annotating time expressions. See the TimeML specification document
\cite{isotimeml} for further information. -->
<!ELEMENT timeExpressions (timex3)*>

<!-- TIMEX3 ELEMENT -->
<!-- represent a temporal expression

	Subelements:
		- span: a <span> element

	Attributes:
		- id (REQUIRED)
        - type: date/time/duration/set (REQUIRED)
        - beginPoint: id of first element of expression (optional)
        - endPoint: id of last element of expression (optional)
        - quant: used for specifying sets that denote quantified times. Generally a literal from the text that qualifies
        over the expression, e.g. 'EVERY' or 'SOME' (optional)
        - freq: used for specifying sets that denote quantified times. It contains an integer value and a time
        granularity to represent any frequency contained in the set. Usual values are '2X' (twice-a-month),
        '3D' (three-days), etc.(optional)
        - functionInDocument:  (optional)
        - temporalFunction: (optional)
        - value: (optional)
        - valueFromFunction: (optional)
        - mod: (optional)
        - anchorTimeID: (optional)
	-->
<!ELEMENT timex3 (span)>
<!ATTLIST timex3
          id ID #REQUIRED
          type CDATA #REQUIRED
          beginPoint IDREF #IMPLIED
          endPoint IDREF #IMPLIED
          quant CDATA #IMPLIED
          freq  CDATA #IMPLIED
          functionInDocument CDATA #IMPLIED
          temporalFunction CDATA #IMPLIED
          value CDATA #IMPLIED
          valueFromFunction CDATA #IMPLIED
          mod CDATA #IMPLIED
          anchorTimeID IDREF #IMPLIED>

<!-- TEMPORALRELATIONS LAYER -->
<!ELEMENT temporalRelations (tlink|predicateAnchor)*>

<!-- TLINK ELEMENT -->
<!ELEMENT tlink EMPTY>
<!ATTLIST tlink
          id ID #REQUIRED
          from IDREF #REQUIRED
          to IDREF #REQUIRED
          fromType CDATA #REQUIRED
          toType CDATA #REQUIRED
          relType CDATA #REQUIRED>

<!-- PREDICATEANCHOR ELEMENT -->
<!ELEMENT predicateAnchor (span)+>
<!ATTLIST predicateAnchor
          id ID #IMPLIED
          anchorTime IDREF #IMPLIED
          beginPoint IDREF #IMPLIED
          endPoint IDREF #IMPLIED>

<!-- CAUSALRELATIONS LAYER -->
<!ELEMENT causalRelations (clink)+>

<!-- CLINK ELEMENT -->
<!ELEMENT clink EMPTY>
<!ATTLIST clink
          id ID #REQUIRED
          from IDREF #REQUIRED
          to IDREF #REQUIRED
          relType CDATA #IMPLIED>

<!-- ATTRIBUTION LAYER -->
<!-- The attribution layer represents statements and information about them.-->
<!ELEMENT attribution (statement)+>
<!-- STATEMENT ELEMENT -->
<!-- <statement> elements contain:
 	- statement_target: identifies the statement (REQUIRED)
 	- statement_source (optional)
 	- statement_cue: (optional)
 	All elements contain a span that points to relevant elements in the document.
-->
<!ELEMENT statement (statement_target, statement_source?, statement_cue?)>
<!ATTLIST statement
          id ID #REQUIRED>

<!ELEMENT statement_target (span)>
<!ELEMENT statement_source (span)>
<!ELEMENT statement_cue (span)>

<!-- FACTUALITIES layer -->
<!-- Information about the veracity or factuality of events can be represented in the factuality layer.
The information stored in this layer is relevant for finding out whether something happened or not according to a source.
It includes information on whether something is certain, probable or possible, it is true or false and whether it is a
statement about the future (implying speculation).  -->
<!ELEMENT factualities (factuality)+>
<!-- FACTUALITY ELEMENT
  	 Represents elements for which we have information concerning their factuality.

  	 Subelements:
  	 	- span (REQUIRED)
  	 	- a list of <factVal> elements that provide information about the factuality of the expression in the span.

  	 Element ordering:
  	 	- span first

  	 Attributes:
  	 	- id (REQUIRED) -->
<!ELEMENT factuality (span,factVal+)>
<!ATTLIST factuality
          id ID #REQUIRED>

<!-- FACTVAL ELEMENT -->
<!-- <factVal> elements provide information about the factuality of the expression.

	Attributes:
		- value: factuality value (REQUIRED)
		- resource: points to the ontology or theory that introduced the value (REQUIRED)
		- confidence: confidence of the module that generated the value (optional)
		- source: the module that generated the result (can in principle be specified as linguistic processor)
		-->
<!ELEMENT factVal EMPTY>
<!ATTLIST factVal
          value CDATA #REQUIRED
          resource CDATA #REQUIRED
          confidence CDATA #IMPLIED
          source CDATA #IMPLIED>


<!-- SPAN ELEMENT -->
<!-- <span> elements have one or more <target> subelements, each one pointing to an element of another
	layer.

	Attributes:
		- primary: identifies a primary span for elements that contain several <span> subelements
		- status: manual/system/deprecated (optional)-->
<!ELEMENT span (target)+>
<!ATTLIST span
          primary CDATA #IMPLIED
		  status CDATA #IMPLIED>

<!-- TARGET ELEMENT -->
<!-- <target> elements refer to the id of a target element.

	Attributes:
		- id: the id of the target element (REQUIRED and UNIQUE)
		- head: indicates whether the target is the head of a list of targets-->
<!ELEMENT target EMPTY>
<!ATTLIST target
          id IDREF #REQUIRED
          head CDATA #IMPLIED>

<!-- TUNITS LAYER -->
<!-- The text-units layer identifies elements such as headings, paragraphs, notes, etc. -->
<!ELEMENT tunits (tunit)+>

<!-- TUNIT ELEMENT -->
<!-- <tunit> elements represent the structure of a document.

	Attributes:
		- id (REQUIRED)
		- offset: character index of start of text unit (REQUIRED)
		- length: length (in characters) of the text unit (REQUIRED)
		- type: type of text unit, e.g., 'heading' or 'paragraph' (optional)
		- xpath: text unit xpath for documents extracted from XML-->
<!ELEMENT tunit EMPTY>
<!ATTLIST tunit
          id ID #REQUIRED
          type CDATA #IMPLIED
          xpath CDATA #IMPLIED
          offset CDATA #REQUIRED
          length CDATA #REQUIRED>

<!ELEMENT locations (#PCDATA)*>
<!ELEMENT dates (#PCDATA)*>


